---
import { getCollectionPageData, formatCollectionName } from '../utils/collections/';
import Button from './Button.astro';

const { collection, children, viewAllHref, viewAllText } = Astro.props;

if (!collection || typeof collection !== 'string') {
  throw new Error(`The "collection" prop must be a non-empty string.`);
}

let pageData;
try {
  pageData = await getCollectionPageData(collection);
} catch (error) {
  console.error(error.message);
  Astro.redirect('/404');
}

const { pageTitle, pageDescription, hasPage } = pageData;
const finalViewAllHref = viewAllHref || `/${collection}`;
const finalViewAllText = viewAllText || `View All ${formatCollectionName(collection)}`;
const currentPath = Astro.url.pathname;
const isCurrentPageCollectionRoot = currentPath === `/${collection}`;
---
<div class="w-full">
  <header class="text-center mb-8">
    <h1 class="text-2xl md:text-3xl text-gray-333 mb-2">{pageTitle}</h1>
    <p class="text-lg text-gray-666">{pageDescription}</p>
  </header>

  <div>
    <slot />
  </div>

  {hasPage && !isCurrentPageCollectionRoot && (
    <div class="text-center mt-8">
      <Button text={finalViewAllText} href={finalViewAllHref} />
    </div>
  )}
</div>
