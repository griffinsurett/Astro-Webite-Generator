---
import { executeQuery } from '../../../utils/queries/executeQuery.js';
import BarMenu from './BarMenu/BarMenu.astro';
import HamburgerMenu from './HamburgerMenu/HamburgerMenu.jsx';
import HamburgerIcon from './HamburgerMenu/HamburgerIcon.astro';

interface Props {
  queryName: string;
  className?: string;
  hamburgerOnly?: boolean;
  hamburgerTransform?: boolean; // NEW
}

const {
  queryName,
  className = '',
  hamburgerOnly = false,
  hamburgerTransform = true, // default to true, meaning lines -> X
} = Astro.props as Props;

const query = await executeQuery(queryName);
---

<nav class={`hierarchical-menu ${className}`} aria-label="Main Navigation">
  {!hamburgerOnly && (
    <div class="bar-menu hidden md:block">
      <BarMenu className="bar-menu" queryName={query} />
    </div>
  )}

  <div
    class={
      hamburgerOnly
        ? "hamburger-menu block"       /* Show on all screens if hamburgerOnly */
        : "hamburger-menu block md:hidden" /* Otherwise show only on <md */
    }
  >
    <!-- (A) The static hamburger icon (Astro) -->
    <HamburgerIcon transform={hamburgerTransform} />

    <!-- (B) The React side-drawer that listens to #hamburger-toggle -->
    <HamburgerMenu
      client:load
      queryName={query}
      Width="60%"
      showCloseButton={true}
      className="mt-0"
    />
  </div>
</nav>
