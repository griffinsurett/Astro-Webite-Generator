---
import Layout from '../../layouts/Layout.astro';
import SharedItemPage from '../../components/SharedItemPage.astro';

import { generateTwoSegmentPaths, handleTwoSegmentRedirect } from '../../utils/redirects';
import { getCollectionItemPageData } from '../../utils/collections/collectionPageData.js';
import { collections } from '../../content/config';

const { collection, slug } = Astro.params;

/** 1) Build static paths for two-segment item routes + aliases */
export async function getStaticPaths() {
  return await generateTwoSegmentPaths();
}

// 2) Check if route is a known redirect
const redirectTo = handleTwoSegmentRedirect(collection, slug);
if (redirectTo) {
  return Astro.redirect(redirectTo);
}

// 3) Check if the collection is valid
const colObj = collections[collection];
if (!colObj) {
  return Astro.redirect('/404');
}

// If the collection is actually single-segment => redirect
if (colObj.metadata.collectionSlugInItem === false) {
  return Astro.redirect(`/${slug}`);
}

// 4) Fetch item data
let pageData;
try {
  pageData = await getCollectionItemPageData(collection, slug);
} catch (error) {
  console.error(error);
  return Astro.redirect("/404");
}

// 5) Extract fields for SEO
const { pageTitle, description, featuredImage, crawl } = pageData;
---
<Layout
  title={pageTitle}
  description={description}
  image={featuredImage}
  ogType="article"
  crawl={crawl}
>
  <!-- Render the shared item details + sections -->
  <SharedItemPage item={pageData} collection={collection} />
</Layout>
