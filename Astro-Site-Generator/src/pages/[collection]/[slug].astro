---
// src/pages/[collection]/[slug].astro
import CollectionItemLayout from "../../layouts/CollectionItemLayout.astro";
import Section from "../../components/Section.astro";
import ContentTemplate from "../../components/ContentTemplate.astro";
import ItemsTemplate from "../../components/ItemsTemplate.astro";
import CollectionsCard from "../../components/CollectionsCard.astro";

import { generateTwoSegmentPaths, handleTwoSegmentRedirect } from "../../utils/redirects";
import { getCollectionItemPageData } from "../../utils/collections";
import { getItemSections } from "../../utils/sections.js";
import { collections } from "../../content/config";

const { collection, slug } = Astro.params;

/** Build static paths */
export async function getStaticPaths() {
  return await generateTwoSegmentPaths();
}

// 1) Check if route is a redirect from older slugs, etc.
const redirectTo = handleTwoSegmentRedirect(collection, slug);
if (redirectTo) {
  return Astro.redirect(redirectTo);
}

// 2) Check if the collection itself is configured to NOT use two-segment
const colObj = collections[collection];
if (!colObj) {
  return Astro.redirect("/404");
}

const { metadata } = colObj;
if (metadata.collectionSlugInItem === false) {
  // This entire collectionâ€™s items are at /slug => so /collection/slug is an alias that should redirect
  return Astro.redirect(`/${slug}`);
}

// 3) If we get here, the collection is indeed two-segment. Let's fetch the item:
let pageData;
try {
  pageData = await getCollectionItemPageData(collection, slug);
} catch (err) {
  console.error(err);
  return Astro.redirect("/404");
}

// 4) Extract fields
const { title, description, icon, featuredImage, pageTitle } = pageData;
const itemSections = getItemSections(collection, slug);
---

<CollectionItemLayout
  title={pageTitle}
  description={description}
  image={featuredImage}
>
  <Section>
    <h1>{icon || "ðŸ“„"} {title}</h1>
    <p>{description}</p>
  </Section>

  {itemSections.map((sec) => (
    <Section>
      <ContentTemplate collection={sec.collection}>
        <ItemsTemplate
          collection={sec.collection}
          queryName={sec.queryName}
          ItemComponent={CollectionsCard}
          slug={slug}
          currentCollection={collection}
          columns={3}
          gap="1.5rem"
        />
      </ContentTemplate>
    </Section>
  ))}
</CollectionItemLayout>
