---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import CollectionCard from '../../components/CollectionsCard.astro'; // Ensure correct import
import { isValidCollection, formatCollectionName, getAvailableCollections } from '../../utils/collections.js';

// Extract dynamic parameter
const { collection } = Astro.params;

// Validate the collection
if (!isValidCollection(collection)) {
  throw new Error(`Collection "${collection}" not found.`);
}

// Fetch items from the specified collection
const items = await getCollection(collection);

// Format collection name for display
const formattedCollectionName = formatCollectionName(collection);
const pageTitle = `Our ${formattedCollectionName}`;
const pageDescription = `Explore our ${collection} and discover what we offer.`;

// Export the getStaticPaths function
export async function getStaticPaths() {
  const collections = getAvailableCollections();
  const paths = collections.map(col => ({
    params: { collection: col },
  }));
  return paths;
}
---
<Layout title={pageTitle} description={pageDescription}>
  <header>
    <h1>{pageTitle}</h1>
    <p>{pageDescription}</p>
  </header>
  <main>
    <section class="collections-list">
      {items.map(item => (
        <CollectionCard
          key={item.id}
          title={item.data.title}
          description={item.data.description}
          slug={item.data.slug}
          icon={item.data.icon}
          collection={collection}
          image={item.data.image}
          price={item.data.price}
          date={item.data.date}
          author={item.data.author}
        />
      ))}
    </section>
  </main>
</Layout>

<style>
  .collections-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    padding: 2rem 0;
  }
  header {
    text-align: center;
    padding: 2rem 0;
  }
</style>
